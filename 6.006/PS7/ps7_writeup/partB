Clearly the runtime I provided of $\Theta(cash * count * total)$ is incorrect because I meant cash to be total amount of cash possible, which is $total$. If I had written this correctly, then I would have obtained the correct runtime of $\Theta(count * total^2)$. 

My algorithm and recurrence are mostly correct, although I missed a couple of edge cases. My code basically implemented the second solution, but with an extra maximum. Although my recurrence did not contain it, my pseudocode set $profit[c,s,0] = cash$, which is the first condition in solution 2's recurrence. I did forget to set $profit[c,s,x] = profit[c,s-1, limit[s-1]]$ if $x = 0$ or $start[s] > c$. 

The main part of the recurrence was mostly the same, except I took a maximum $max_{i \in \{0, \ldots, limit[s-1] \} }$ over $profit[c,s-1,i]$. This should give a correct answer, because instead of setting the last argument of $profit[c,s,x]$ as the new limit like in the solutions, I set it as the number of stocks bought. Thus, taking the maximum over all the possible $x$'s of buying $x$ of a given stock will be equivalent to the solution's answer of taking the maximum profit to buy a stock with a given limit. This is because $x$ is bounded by the same limit as in the solution's answer. I included the best profit for each stock in a new table $bestprofit$, which would be equivalent to the $profit$ table contained in the first solution.
